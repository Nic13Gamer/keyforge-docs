{
  "openapi": "3.1.1",
  "info": {
    "title": "Keyforge API",
    "version": "1.0.0"
  },
  "servers": [{ "url": "https://keyforge.dev" }],

  "paths": {
    "/api/v1/public/licenses/validate": {
      "post": {
        "tags": ["public"],
        "operationId": "validateLicense",
        "summary": "Validate license",
        "description": "Verify if a license is valid.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "licenseKey": {
                    "type": "string",
                    "description": "The license key.",
                    "example": "ABCDE-ABCDE-ABCDE-ABCDE-ABCDE"
                  },
                  "deviceIdentifier": {
                    "type": "string",
                    "description": "The identifier of the device to validate the license for.",
                    "example": "some_device_id"
                  },
                  "productId": {
                    "type": "string | string[]",
                    "description": "The product ID of the license. Can also be an array if your app supports multiple products.",
                    "example": "p_123456"
                  }
                },
                "required": ["licenseKey", "deviceIdentifier", "productId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. The license can be valid or invalid (`device` and `license` will be null).",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The response to a license validation request.",
                  "properties": {
                    "isValid": {
                      "type": "boolean",
                      "description": "Whether the license is valid.",
                      "example": true
                    },
                    "device": {
                      "$ref": "#/components/schemas/Device"
                    },
                    "license": {
                      "$ref": "#/components/schemas/PerpetualLicense"
                    }
                  },
                  "required": ["isValid", "device", "license"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },

    "/api/v1/public/licenses/activate": {
      "post": {
        "tags": ["public"],
        "operationId": "activateLicense",
        "summary": "Activate license",
        "description": "Activate a license.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "licenseKey": {
                    "type": "string",
                    "description": "The key of the license to activate.",
                    "example": "ABCDE-ABCDE-ABCDE-ABCDE-ABCDE"
                  },
                  "deviceIdentifier": {
                    "type": "string",
                    "description": "A unique identifier of the device. Must have at most 96 characters.",
                    "example": "some_device_id"
                  },
                  "deviceName": {
                    "type": "string",
                    "description": "The name of the device. Must have at most 64 characters.",
                    "example": "My computer name"
                  },
                  "productId": {
                    "type": "string | string[]",
                    "description": "The product ID of the license. Can also be an array if your app supports multiple products.",
                    "example": "p_123456"
                  }
                },
                "required": [
                  "licenseKey",
                  "deviceIdentifier",
                  "deviceName",
                  "productId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. The license is valid and has been activated on the device.\n\nThe `token` will only be present if license tokens are configured for the product.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The response to a license activation request.",
                  "properties": {
                    "isValid": {
                      "type": "boolean",
                      "description": "Whether the license is valid. Always true for this endpoint.",
                      "example": true
                    },
                    "token": {
                      "type": "string",
                      "description": "If license tokens are configured for the product, this will contain the token. Otherwise, this property will not be present.",
                      "example": "..."
                    },
                    "device": {
                      "$ref": "#/components/schemas/Device"
                    },
                    "license": {
                      "$ref": "#/components/schemas/PerpetualLicense"
                    }
                  },
                  "required": ["isValid", "device", "license"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. If the license is invalid, or another error occurs.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The response to a bad request.",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code.",
                          "enum": [
                            "invalid_license",
                            "license_revoked",
                            "license_expired",
                            "max_devices_reached",
                            "unknown_error"
                          ],
                          "example": "license_revoked"
                        },
                        "message": {
                          "type": "string",
                          "description": "The error message.",
                          "example": "License is revoked."
                        }
                      },
                      "required": ["code", "message"]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/public/licenses/token": {
      "post": {
        "tags": ["public"],
        "operationId": "licenseToken",
        "summary": "Get license token",
        "description": "Get a new signed token for a license. License tokens need to be configured for the product to use this endpoint.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "licenseKey": {
                    "type": "string",
                    "description": "The license key.",
                    "example": "ABCDE-ABCDE-ABCDE-ABCDE-ABCDE"
                  },
                  "deviceIdentifier": {
                    "type": "string",
                    "description": "The identifier of the current device.",
                    "example": "some_device_id"
                  },
                  "productId": {
                    "type": "string | string[]",
                    "description": "The product ID of the license. Can also be an array if your app supports multiple products.",
                    "example": "p_123456"
                  }
                },
                "required": ["licenseKey", "deviceIdentifier", "productId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. The license token is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The response to a license token request.",
                  "properties": {
                    "isValid": {
                      "type": "boolean",
                      "description": "Always true for this endpoint, as it only returns a token for valid licenses.",
                      "example": true
                    },
                    "token": {
                      "type": "string",
                      "description": "The signed JWT for the license.",
                      "example": "..."
                    }
                  },
                  "required": ["isValid", "token"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. If the license is invalid, the product does not support license tokens, or another error occurs.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The response to a bad request.",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code.",
                          "enum": [
                            "invalid_license",
                            "license_revoked",
                            "license_expired"
                          ],
                          "example": "invalid_license"
                        },
                        "message": {
                          "type": "string",
                          "description": "The error message.",
                          "example": "Invalid license."
                        }
                      },
                      "required": ["code", "message"]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/public/products/{productId}/license-token/public-key": {
      "get": {
        "tags": ["public"],
        "operationId": "productLicenseTokenPublicKey",
        "summary": "Get license token public key",
        "description": "Get the public key JWK of a product for verifying license tokens. This endpoint is only available if the product supports license tokens and exposes its public key.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product ID.",
              "example": "p_123456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The public key JWK is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jwk": {
                      "type": "object",
                      "description": "The public key JWK used to verify license tokens for the product.",
                      "properties": {
                        "kty": {
                          "type": "string",
                          "example": "EC"
                        },
                        "x": {
                          "type": "string",
                          "example": "..."
                        },
                        "y": {
                          "type": "string",
                          "example": "..."
                        },
                        "crv": {
                          "type": "string",
                          "example": "P-256"
                        },
                        "alg": {
                          "type": "string",
                          "example": "ES256"
                        }
                      },
                      "required": ["kty", "x", "y", "crv", "alg"]
                    }
                  },
                  "required": ["jwk"]
                }
              }
            }
          },
          "404": {
            "description": "Not Found. If the product does not exist, does not support license tokens, or does not expose its public key."
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "Device": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "The identifier of the device.",
            "example": "some_device_id"
          },
          "name": {
            "type": "string",
            "description": "The name of the device.",
            "example": "My computer name"
          },
          "activationDate": {
            "type": "string",
            "description": "The date when the license was activated on this device.",
            "example": "2023-05-19T18:39:33.000Z"
          }
        },
        "required": ["identifier", "name", "activationDate"]
      },
      "PerpetualLicense": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The license key.",
            "example": "ABCDE-ABCDE-ABCDE-ABCDE-ABCDE"
          },
          "productId": {
            "type": "string",
            "description": "The product ID of the license.",
            "example": "p_123456"
          },
          "type": {
            "type": "string",
            "description": "The type of the license. Can be `perpetual` or `timed`.",
            "example": "perpetual"
          },
          "revoked": {
            "type": "boolean",
            "description": "Whether the license has been revoked.",
            "example": false
          },
          "maxDevices": {
            "type": "integer",
            "description": "The maximum number of devices that can activate this license.",
            "example": 5
          },
          "expiresAt": {
            "type": "string",
            "nullable": true,
            "description": "The date when the license expires. Null if the license is perpetual.",
            "example": null
          },
          "createdAt": {
            "type": "string",
            "description": "The date when the license was created.",
            "example": "2023-05-19T18:39:33.000Z"
          }
        },
        "required": [
          "key",
          "productId",
          "type",
          "revoked",
          "maxDevices",
          "expiresAt",
          "createdAt"
        ]
      }
    }
  },

  "tags": [
    {
      "name": "public",
      "description": "A public REST API for Keyforge. No API key is needed to access the endpoints. It allows you to create a licensed app without any backend or API.",
      "x-displayName": "Public REST API"
    }
  ]
}
